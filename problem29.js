const bigInt = require("big-integer");

function build(max)
{
    let result = [];

    function insert(value)
    {
        if (result.length === 0)
        {
            result.push(value);
            return;
        }

        let low = 0, hi = result.length;
        let position;

        while (low <= hi)
        {
            position = Math.floor((hi+low)/2);
            if (position >= result.length)
            {
                result.push(value);
                return;
            }
            var v = result[position];
            if (v.equals(value))
                return; // No need to insert
            if (v.greater(value))
                hi = position-1;
            else
                low = position+1;
        }
        // insert at position ?
        position = Math.floor((hi+low)/2);
        position++;
        if (position >= result.length)
            result.push(value)
        else
            result.splice(position, 0, value);
    }

    for (let a = 2; a <= max; a++)
    {
        for (let b = 2; b <= max; b++)
        {
            let v = new bigInt(a).pow(b);
            insert(v);
        }
    }
    return result;
}

let values;

values = build(5);
console.log(values.length + " values which are " + values.toString());
values = build(100);
console.log(values.length + " distinct terms generated by a^b for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100");
